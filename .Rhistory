View(distinct(growth_meas_lang, age))
lemma_list<- growth_meas_lang %>%
trim_all_unilemma() %>%
filter(age==first_age) %>%
select(item, uni_lemma)
lemma_list<- growth_meas_lang %>%
trim_all_unilemma() %>%
dplyr::filter(age==first_age) %>%
select(item, uni_lemma)
lemma_list<- growth_meas_lang %>%
trim_all_unilemma()
filter <- dplyr::filter
lemma_list<- growth_meas_lang %>%
trim_all_unilemma() %>%
dplyr::filter(age==first_age) %>%
select(item, uni_lemma)
lemma_list
assoc_pairs<- make_assoc_pairs(lemma_list = lemma_list)
head(assoc_pairs)
assoc_PAT<- PAT_generator(vocab_age = growth_meas_lang, word_pairs = assoc_pairs)
head(asso_PAT)
head(assoc_PAT)
View(assoc_PAT)
vocab_age <- growth_meas_lang
word_pairs <- assoc_pairs
vocab_age <- growth_meas_lang
word_pairs <- assoc_pairs
vocab_age<-vocab_age %>%
filter(item %in% word_pairs$item) %>%
mutate(value=NA) %>%
arrange(age, item)
vocab_age <- growth_meas_lang
head(vocab_age)
vocab_age<-vocab_age %>%
filter(item %in% word_pairs$item) %>%
mutate(value=NA) %>%
arrange(age, item)
head(vocab_age)
all_ages<- (vocab_age %>%
group_by(age) %>%
summarise(n=n()))$age
all_ages
ages<- all_ages[2:length(all_ages)]
ages
i=13
curr_items<- (vocab_age %>%
filter(age==i) %>%
select(item))$item
curr_items
head(vocab_age)
length(curr_items)
exist_words<-(vocab_age %>%
filter(age<i,learned==1) %>%
select(item))$item
exist_words
i=13
curr_items<- (vocab_age %>%
filter(age==i) %>%
select(item))$item
curr_items
exist_words<-(vocab_age %>%
filter(age<i,learned==1) %>%
select(item))$item
exist_words
i=17
curr_items<- (vocab_age %>%
filter(age==i) %>%
select(item))$item
curr_items
length(curr_items)
exist_words<-(vocab_age %>%
filter(age<i,learned==1) %>%
select(item))$item
exist_words
head(word_pairs)
sem_acq<- word_pairs %>%
filter(item %in% exist_words, pair %in% exist_words)
sem_acq
sem_acq<- word_pairs %>%
filter(item %in% exist_words, pair %in% exist_words) %>%
group_by(item) %>%
summarise(value=sum(link))
sem_acq
i
row_n<-which(vocab_age$age==i & vocab_age$item==curr_items[1])
row_n
curr_items[1]
curr_items
j=13
link_to_exist<-(word_pairs %>% filter(pair==j, item %in% exist_words, link==1))$item
link_to_exist
i=18
curr_items<- (vocab_age %>%
filter(age==i) %>%
select(item))$item
curr_items
exist_words<-(vocab_age %>%
filter(age<i,learned==1) %>%
select(item))$item
exist_words
sem_acq<- word_pairs %>%
filter(item %in% exist_words, pair %in% exist_words) %>%
group_by(item) %>%
summarise(value=sum(link))
sem_acq
curr_items
j=23
link_to_exist<-(word_pairs %>% filter(pair==j, item %in% exist_words, link==1))$item
link_to_exist
word_pairs %>% filter(pair==j, item %in% exist_words, link==1)
hi <- word_pairs %>% filter(pair==j, item %in% exist_words, link==1)
hi
2
hi <- word_pairs %>% filter(pair==j, link==1)
hi
hi <- word_pairs %>% filter(pair==j, link==1)
head(word_pairs)
head(word_pairs %>% filter(item==13, pair == 14))
head(word_pairs %>% filter(pair == 13, link==1))
exist_words
word_pairs %>% filter(pair == 13, item == 70, link==1)
word_pairs %>% filter(pair == 13, item == 70)
word_pairs %>% filter(pair == 13, item %in% exist_words)
word_pairs %>% filter(pair == 13, item %in% exist_words, link==1)
i
word_pairs %>% filter(pair == 18, item %in% exist_words, link==1)
sem_acq
word_pairs %>% filter(item == 18, pair %in% exist_words, link==1)
word_pairs %>% filter(pair==j, item %in% exist_words, link==1)
j
sem_acq
link_to_exist
PAT_value<-sem_acq %>%
filter(item %in% link_to_exist)
PAT_value
library(broom)
library(purrr)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(wordbankr)
library(stringr)
library(feather)
library(lme4)
library(boot)
library(langcog)
library(ggthemes)
library(nlme)
library(rwebppl)
library(jsonlite)
library(Hmisc)
library(poweRlaw)
library(HDInterval)
hi <- get_administration_data(language = "English (American)", form = "WS")
head(hi)
head(hi)
head(hi)
distinct(hi, source_name)
library(broom)
library(purrr)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(wordbankr)
library(stringr)
library(feather)
library(lme4)
library(boot)
library(langcog)
library(ggthemes)
library(nlme)
library(rwebppl)
library(jsonlite)
library(Hmisc)
library(poweRlaw)
library(HDInterval)
#Load helper functions
source(paste(getwd(),"/helper_functions/all_helper.r",sep = ""), chdir = T)
#Load probabilsitic models
source(paste(getwd(),"/models/all_models.r",sep = ""), chdir = T)
growth_preds <- feather::read_feather("../saved_data/growth_preds.feather")
plot_growth_preds_prod <- ggplot(subset(growth_preds, measure == "produces" & Test=='Individual'), aes(x = model , y = mean)) +
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=Test),
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))
#scale_y_discrete(breaks =NULL)
plot_growth_preds_comp <- ggplot(subset(growth_preds, measure == "understands" & Test=='Individual'), aes(x = model , y = mean)) +
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=Test),
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) +
scale_y_continuous(breaks =c(0,0.2))
#ggsave("figs/plot_growth_preds_prod.pdf", plot = plot_growth_preds_prod, width = 10, height = 4)
#ggsave("figs/plot_growth_preds_comp.pdf", plot = plot_growth_preds_comp, width = 10, height = 4)
#legend <- get_legend(plot_growth_preds_prod)
#plot_noLegend <- plot_grid(plot_growth_preds_prod + theme(legend.position="none"), NULL, plot_growth_preds_comp + theme(legend.position="none"), labels = c("A", "", "B"), ncol = 1, align = "v", rel_heights = c(1.3, 0.1, 1.3))
#plot_grid(plot_noLegend, legend, rel_widths = c(2, .2))
plot_noLegend <- plot_grid(plot_growth_preds_prod, NULL, plot_growth_preds_comp , labels = c("A", "", "B"), ncol = 1, align = "v", rel_heights = c(1.3, 0.1, 1.3))
library(papaja)
library(readr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(knitr)
library(boot)
library(dplyr)
library(langcog)
library(ggthemes)
library(broom)
library(HDInterval)
#library("knitcitations")
#cleanbib()
#options("citation_format" = "pandoc")
growth_preds <- feather::read_feather("../saved_data/growth_preds.feather")
plot_growth_preds_prod <- ggplot(subset(growth_preds, measure == "produces" & Test=='Individual'), aes(x = model , y = mean)) +
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=Test),
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))
#scale_y_discrete(breaks =NULL)
plot_growth_preds_comp <- ggplot(subset(growth_preds, measure == "understands" & Test=='Individual'), aes(x = model , y = mean)) +
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=Test),
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) +
scale_y_continuous(breaks =c(0,0.2))
#ggsave("figs/plot_growth_preds_prod.pdf", plot = plot_growth_preds_prod, width = 10, height = 4)
#ggsave("figs/plot_growth_preds_comp.pdf", plot = plot_growth_preds_comp, width = 10, height = 4)
#legend <- get_legend(plot_growth_preds_prod)
#plot_noLegend <- plot_grid(plot_growth_preds_prod + theme(legend.position="none"), NULL, plot_growth_preds_comp + theme(legend.position="none"), labels = c("A", "", "B"), ncol = 1, align = "v", rel_heights = c(1.3, 0.1, 1.3))
#plot_grid(plot_noLegend, legend, rel_widths = c(2, .2))
plot_noLegend <- plot_grid(plot_growth_preds_prod, NULL, plot_growth_preds_comp , labels = c("A", "", "B"), ncol = 1, align = "v", rel_heights = c(1.3, 0.1, 1.3))
plot_grid(plot_noLegend)
#knitr::include_graphics("figs/plot_growth_preds_prod.pdf")
##Test
plot_growth_preds_prod <- ggplot(subset(growth_preds, Test=='Individual'), aes(x = model , y = mean)) +
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=measure),
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
#                position = position_dodge(width = .5),
#               size = 0.5,
#               fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))
#scale_y_discrete(breaks =NULL)
##Test
plot_growth_preds_prod <- ggplot(subset(growth_preds, Test=='Individual'), aes(x = model , y = mean)) +
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=measure),
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))
#scale_y_discrete(breaks =NULL)
plot_growth_preds_prod
head(growth_preds)
##Test
growth_preds$model <- plyr::mapvalues(growth_preds$model,
from = c("semPAC","semPAT","phonoPAC", "phonoPAT"),
to = c("semEXT","semINT","phonoEXT", "phonoINT"))
plot_growth_preds <- ggplot(subset(growth_preds, Test=='Individual'), aes(x = model , y = mean)) +
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=measure),
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))
#scale_y_discrete(breaks =NULL)
plot_growth_preds
head(growth_preds)
plot_growth_preds
distinct(growth_preds, measure)
##Test
growth_preds$model <- plyr::mapvalues(growth_preds$model,
from = c("semPAC","semPAT","phonoPAC", "phonoPAT"),
to = c("semEXT","semINT","phonoEXT", "phonoINT"))
growth_preds$measure <- plyr::mapvalues(growth_preds$measure,
from = c("produces","understands"),
to = c("production","comprehension"))
plot_growth_preds <- ggplot(subset(growth_preds, Test=='Individual'), aes(x = model , y = mean)) +
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=measure),
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))
#scale_y_discrete(breaks =NULL)
plot_growth_preds
plot_growth_preds
##Test
growth_preds$model <- plyr::mapvalues(growth_preds$model,
from = c("semPAC","semPAT","phonoPAC", "phonoPAT"),
to = c("semEXT","semINT","phonoEXT", "phonoINT"))
growth_preds$measure <- plyr::mapvalues(growth_preds$measure,
from = c("produces","understands"),
to = c("production","comprehension"))
plot_growth_preds <- ggplot(subset(growth_preds, Test=='Individual'), aes(x = model , y = mean)) +
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=measure),
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))  +
#scale_y_discrete(breaks =NULL)
xlab("Beta") +ylab("Growth mechanism")
plot_growth_preds
plot_growth_preds
##Test
growth_preds$model <- plyr::mapvalues(growth_preds$model,
from = c("semPAC","semPAT","phonoPAC", "phonoPAT"),
to = c("semEXT","semINT","phonoEXT", "phonoINT"))
growth_preds$measure <- plyr::mapvalues(growth_preds$measure,
from = c("produces","understands"),
to = c("production","comprehension"))
plot_growth_preds <- ggplot(subset(growth_preds, Test=='Individual'), aes(x = model , y = mean)) +
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=measure),
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))  +
#scale_y_discrete(breaks =NULL)
ylab("Beta") +xlab("Growth mechanism")
plot_growth_preds
plot_growth_preds
##Test
growth_preds$model <- plyr::mapvalues(growth_preds$model,
from = c("semPAC","semPAT","phonoPAC", "phonoPAT"),
to = c("semEXT","semINT","phonoEXT", "phonoINT"))
growth_preds$measure <- plyr::mapvalues(growth_preds$measure,
from = c("produces","understands"),
to = c("production","comprehension"))
plot_growth_preds <- ggplot(subset(growth_preds, Test=='Individual'), aes(x = model , y = mean)) +
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=measure),
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))  +
#scale_y_discrete(breaks =NULL)
ylab("Beta") +xlab("Mechanism")
plot_growth_preds
plot_growth_preds
##Test
growth_preds$model <- plyr::mapvalues(growth_preds$model,
from = c("semPAC","semPAT","phonoPAC", "phonoPAT"),
to = c("semEXT","semINT","phonoEXT", "phonoINT"))
growth_preds$measure <- plyr::mapvalues(growth_preds$measure,
from = c("produces","understands"),
to = c("production","comprehension"))
plot_growth_preds <- ggplot(subset(growth_preds, Test=='Individual'), aes(x = model , y = mean)) +
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=measure),
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))  +
#scale_y_discrete(breaks =NULL)
ylab("Estimate") +xlab("Mechanism")
plot_growth_preds
plot_growth_preds
static_preds_all <- feather::read_feather("../saved_data/static_preds_all.feather")
head(static_preds_all)
static_preds_all <- feather::read_feather("../saved_data/static_preds_all.feather")
static_preds_all$predictor <- plyr::mapvalues(static_preds_all$predictor,
from = c("sem_deg","phono_deg","frequency", "length"),
to = c("semEXT","phonoEXT","frequency", "length"))
plot_static_preds_all <- ggplot(static_preds_all, aes(x = predictor, y = Estimate)) +
geom_pointrange(aes(ymin = X2.5.., ymax = X97.5.., y = Estimate, col = predictor, linetype=Test),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
facet_wrap(~measure)  +
coord_flip() +
guides(colour=FALSE)+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7)
ggsave("figs/plot_static_preds_all.pdf", plot = plot_static_preds_all, width = 6, height = 3)
plot_static_preds_all
plot_growth_preds
##Test
growth_preds <- feather::read_feather("../saved_data/growth_preds.feather")
growth_preds$model <- plyr::mapvalues(growth_preds$model,
from = c("semPAC","semPAT","phonoPAC", "phonoPAT"),
to = c("semEXT","semINT","phonoEXT", "phonoINT"))
growth_preds$measure <- plyr::mapvalues(growth_preds$measure,
from = c("produces","understands"),
to = c("production","comprehension"))
plot_growth_preds <- ggplot(subset(growth_preds, Test=='Individual'), aes(x = model , y = mean)) +
geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model, linetype=measure),
#geom_pointrange(aes(ymin = hdi_lower, ymax = hdi_upper, col = model),
position = position_dodge(width = .5),
size = 0.5,
fatten = 0.5)+
geom_hline(yintercept = 0, color = "grey", linetype = "dashed")+
coord_flip() +
facet_wrap( ~ language, ncol=5) +
guides(colour=FALSE, linetype = guide_legend(override.aes = list(size=0.3)))+
scale_colour_solarized() +
theme_few()+
theme(aspect.ratio = 0.7) + #,+
#axis.text.x = element_text(size=7.5, angle=45)) +
scale_y_continuous(breaks =c(0,0.2))  +
#scale_y_discrete(breaks =NULL)
ylab("Estimate") +xlab("Mechanism")
plot_growth_preds
plot_growth_preds
plot_growth_preds
plot_static_preds_all
